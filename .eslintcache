[{"D:\\JS\\tp_labs\\src\\index.js":"1","D:\\JS\\tp_labs\\src\\serviceWorker.js":"2","D:\\JS\\tp_labs\\src\\router\\Router.js":"3","D:\\JS\\tp_labs\\src\\redux\\reducers\\RootReducer.js":"4","D:\\JS\\tp_labs\\src\\redux\\reducers\\AuthReducer.js":"5","D:\\JS\\tp_labs\\src\\redux\\reducers\\TableReducer.js":"6","D:\\JS\\tp_labs\\src\\redux\\actions\\ActionTypes.js":"7","D:\\JS\\tp_labs\\src\\redux\\PreloadData.js":"8","D:\\JS\\tp_labs\\src\\views\\components\\App.js":"9","D:\\JS\\tp_labs\\src\\views\\components\\SignIn.js":"10","D:\\JS\\tp_labs\\src\\views\\components\\Table.js":"11","D:\\JS\\tp_labs\\src\\views\\components\\Form.js":"12","D:\\JS\\tp_labs\\src\\redux\\actionsCreators\\Creators.js":"13","D:\\JS\\tp_labs\\src\\thunk\\components\\ItemList.js":"14","D:\\JS\\tp_labs\\src\\thunk\\actions\\items.js":"15","D:\\JS\\tp_labs\\src\\thunk\\reducers\\items.js":"16","D:\\JS\\tp_labs\\src\\views\\components\\FooterThunkButton.js":"17"},{"size":875,"mtime":1608907964920,"results":"18","hashOfConfig":"19"},{"size":5773,"mtime":1608752202000,"results":"20","hashOfConfig":"19"},{"size":565,"mtime":1608906952376,"results":"21","hashOfConfig":"19"},{"size":394,"mtime":1608908520601,"results":"22","hashOfConfig":"19"},{"size":364,"mtime":1608752247625,"results":"23","hashOfConfig":"19"},{"size":633,"mtime":1608752247627,"results":"24","hashOfConfig":"19"},{"size":108,"mtime":1608752247619,"results":"25","hashOfConfig":"19"},{"size":282,"mtime":1609177708911,"results":"26","hashOfConfig":"19"},{"size":1386,"mtime":1609080578358,"results":"27","hashOfConfig":"19"},{"size":6690,"mtime":1609060610357,"results":"28","hashOfConfig":"19"},{"size":1207,"mtime":1609177245943,"results":"29","hashOfConfig":"19"},{"size":3744,"mtime":1609238793239,"results":"30","hashOfConfig":"19"},{"size":483,"mtime":1608752247621,"results":"31","hashOfConfig":"19"},{"size":1593,"mtime":1609172116030,"results":"32","hashOfConfig":"19"},{"size":921,"mtime":1608906861773,"results":"33","hashOfConfig":"19"},{"size":612,"mtime":1608906861781,"results":"34","hashOfConfig":"19"},{"size":1869,"mtime":1609237970557,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1pw6o06",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\JS\\tp_labs\\src\\index.js",[],["75","76"],"D:\\JS\\tp_labs\\src\\serviceWorker.js",[],"D:\\JS\\tp_labs\\src\\router\\Router.js",[],"D:\\JS\\tp_labs\\src\\redux\\reducers\\RootReducer.js",[],"D:\\JS\\tp_labs\\src\\redux\\reducers\\AuthReducer.js",[],"D:\\JS\\tp_labs\\src\\redux\\reducers\\TableReducer.js",[],"D:\\JS\\tp_labs\\src\\redux\\actions\\ActionTypes.js",[],"D:\\JS\\tp_labs\\src\\redux\\PreloadData.js",[],"D:\\JS\\tp_labs\\src\\views\\components\\App.js",[],"D:\\JS\\tp_labs\\src\\views\\components\\SignIn.js",["77","78"],"import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../redux/actionsCreators/Creators';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        password: '',\r\n        email: ''\r\n    };\r\n\r\n    handleButtonClick() {\r\n        if (this.state.email === 'barsnik96@gmail.com' && this.state.password === '123')\r\n        {\r\n            this.props.login_bool(true);\r\n            if (this.props.logInf)\r\n            {\r\n                this.props.history.push('/main');\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.props.login_bool(false);\r\n            alert(\"Неверный пароль\");\r\n        }\r\n    }    \r\n\r\n    render() {\r\n        const useStyles = makeStyles((theme) => ({\r\n            paper: {\r\n                marginTop: theme.spacing(8),\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            },\r\n            avatar: {\r\n                margin: theme.spacing(1),\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            form: {\r\n                width: '100%', // Fix IE 11 issue.\r\n                marginTop: theme.spacing(1),\r\n            },\r\n            submit: {\r\n                margin: theme.spacing(3, 0, 2),\r\n            },\r\n        }));\r\n        const classes = useStyles;\r\n\r\n        const validationsSchema = yup.object().shape({\r\n            email: yup.string().email('Invalid email').required('Required field'),\r\n            password: yup.string().typeError('Should be a string').required('Required field')\r\n        })\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: ''\r\n                }}\r\n                valideateOnBlur\r\n                onSubmit={(values)=>(\r\n                    this.setState({\r\n                        email: values.email,\r\n                        password: values.password\r\n                    }),\r\n                    console.log(this.state), \r\n                    this.handleButtonClick()         \r\n                )}\r\n                validationSchema={validationsSchema}\r\n            >\r\n            {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                        <form className={classes.form}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type={'text'}\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name={'email'}\r\n                            autoComplete=\"email\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {touched.email && errors.email && <p>{errors.email}</p>}\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type={'text'}\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name={'password'}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={values.password}\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {touched.password && errors.password && <p>{errors.password}</p>}\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            disabled={!isValid && !dirty}\r\n                            type={'submit'}\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            )}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        logInf: state.auth_reducer.logged\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login_bool: (log) => dispatch(login(log))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","D:\\JS\\tp_labs\\src\\views\\components\\Table.js",["79"],"import React from 'react';\r\n\r\nconst TableHeader = () => { \r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>FirstName</th>\r\n                <th>LastName</th>\r\n                <th>Email</th>\r\n                <th>Action</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nconst TableBody = props => { \r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.id}</td>\r\n                <td>{row.firstname}</td>\r\n                <td>{row.lastname}</td>\r\n                <td>{row.email}</td>\r\n                <td><button onClick={ function(){ props.removeCharacter(row.id); props.handleSubmit(props.characterData); }.bind(this)}>Delete</button></td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return <tbody>{rows}</tbody>;\r\n}\r\n\r\nconst Table = (props) => {\r\n    const { characterData, removeCharacter, handleSubmit} = props;\r\n        return (\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} handleSubmit={handleSubmit}/>\r\n            </table>\r\n        );\r\n}\r\nexport default Table;","D:\\JS\\tp_labs\\src\\views\\components\\Form.js",["80"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { add_user } from '../../redux/actionsCreators/Creators';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);        \r\n\r\n        this.state = {\r\n            id: 2,\r\n            firstname: '',\r\n            lastname: '',\r\n            email: '',\r\n            open: false,\r\n            transition: undefined\r\n        };\r\n\r\n    }\r\n    \r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onFormSubmit = (event) => {        \r\n        this.props.handleSubmit(this.state);\r\n        const { firstname, lastname, email } = this.state;\r\n        event.preventDefault();\r\n        this.props.add_user(firstname, lastname, email);\r\n    }\r\n    onClickUp = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                id: prevState.id + 1,\r\n            }\r\n        })\r\n    };\r\n\r\n    TransitionUp(props) {\r\n        return <Slide {...props} direction=\"up\" />;\r\n    }\r\n\r\n    onSnackbarOpen(Transition) {\r\n        this.setState(state => ({ transition: Transition, open: true }))\r\n    }\r\n\r\n    render() {\r\n        const { firstname, lastname, email } = this.state;\r\n\r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <div class=\"block\"><label for=\"firstname\">FirstName</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"firstname\"\r\n                        id=\"firstname\"\r\n                        value={firstname}\r\n                        onChange={this.handleChange} \r\n                    />\r\n                </div>\r\n\r\n                <div class=\"block\"><label for=\"lastname\">LastName</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        id=\"lastname\"\r\n                        value={lastname}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"block\">\r\n                    <label for=\"email\">Email</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div >\r\n\r\n                <div class=\"block1\">\r\n                    <button type=\"submit\" onClick={this.onClickUp, () => this.setState({ open: true, transition: this.TransitionUp })}> \r\n                        Add User\r\n                    </button>\r\n                    <Snackbar                    \r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n                        open={this.state.open}\r\n                        onClose={() => this.setState({ open: false })}\r\n                        TransitionComponent={this.state.transition}\r\n                        message=\"User added!\"\r\n                        key={this.state.transition ? this.state.transition.name : ''}\r\n                        autoHideDuration={2000}\r\n                        transitionDuration={500}\r\n                    />\r\n                </div>\r\n\r\n                <h3>Users</h3>\r\n                \r\n            </form>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        add_user: (firstname, lastname, email) => dispatch(add_user(firstname, lastname, email))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);","D:\\JS\\tp_labs\\src\\redux\\actionsCreators\\Creators.js",[],"D:\\JS\\tp_labs\\src\\thunk\\components\\ItemList.js",[],"D:\\JS\\tp_labs\\src\\thunk\\actions\\items.js",[],["81","82"],"D:\\JS\\tp_labs\\src\\thunk\\reducers\\items.js",[],"D:\\JS\\tp_labs\\src\\views\\components\\FooterThunkButton.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":80,"column":23,"nodeType":"89","messageId":"90","endLine":80,"endColumn":24},{"ruleId":"91","severity":1,"message":"92","line":120,"column":29,"nodeType":"93","endLine":120,"endColumn":44},{"ruleId":"94","severity":1,"message":"95","line":25,"column":125,"nodeType":"96","messageId":"97","endLine":25,"endColumn":129,"fix":"98"},{"ruleId":"87","severity":1,"message":"88","line":89,"column":66,"nodeType":"89","messageId":"90","endLine":89,"endColumn":67},{"ruleId":"83","replacedBy":"99"},{"ruleId":"85","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"103","text":"104"},["101"],["102"],"no-global-assign","no-unsafe-negation",[742,753],""]